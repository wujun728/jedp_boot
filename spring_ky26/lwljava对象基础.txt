一、类：
	初始化、赋值、类变量、类成员、
	1、内存分配：
	1、成员变量：
	2、成员方法：
	3、权限修饰符：
	4、局部变量：
	5、构造函数:
	6、this关键字:
	7、静态成员：
	8、基本数据类型传值与引用类型传值：
	9、继承：
	9、对象实例化过程：在类加载完成之后才进行对象的初始化及其他动作；对象初始化过程包括类加载过程，对象内存分配，设置默认值，赋值操作，执行构造器
		9.1创建对象的初始化过程――涉及构造函数：（1）类加载（与第10点中加载类的步骤一致），若加载过程中发现当前类（假设为C类）有父类，则继续加载其父类，递归加载，直到当前类加载完毕并完成类的初始化（前提是这些类都没有被加载过）；（2）在堆中为对象分配内存空间；（3）为对象的属性赋默认值（一般都是0/null/false）；（4）调用构造函数为对象赋值（真正的自己设置的值）；（5）执行构造器
	10、类加载机制：每个类文件编译后都有一个.class文件与之对应，该文件只有在被需要使用时才会被加载，
一般来说class文件只有在初次使用时才会被加载（一般情况下只被加载一次）。类加载过程如下：加载――连接（验证、准备、解析）――初始化――使用――卸载。
类加载发生在以下几种情况中：（1）new生成新的对象实例；（2）当子类进行加载或初始化时；（3）执行主类时（main方法）；（4）调用静态成员时。
		10.1类加载具体过程――不涉及构造函数：（1）加载阶段：根据类路径获取类的class文件；将.class文件中的静态成员转化为方法区的运行数据结构；在堆中生成一个代表这个类的java.lang.Class对象，作为方法区这些数据的访问入口。（2）验证阶段：验证class文件的东西符合当前虚拟机的要求；（3）准备阶段：正式为类变量分配内存并设置默认值（一般都是0/null/false），注意此时的内存分配仅仅针对静态变量（static修饰的）（4）解析阶段：不懂常量池（5）初始化：执行所有类变量的的赋值以及静态代码块内容（有继承时先为父类的类变量赋值，以及执行父类的静态代码块内容，然后再执行子类的静态部分）；
	11、程序执行过程：
	12、关键字：private/static/final的各个特性；
		（1）private：被private修饰的变量以及方法只能在本类中被访问；
		（2）被static修饰的变量和方法被称为类变量、类方法（全局性），依托于类而存在（先于对象实例化，不依赖于该类的任何实例，被所有实例共享），可以使用类名.方法名/变量名访问；作用是提供共享的数据和方法；静态的成员只能调用静态的成员；static修饰的方法不能被重写（与多态性有关），即使子类使用相同的方法名以及参数列表和返回类型依旧是隐藏（覆盖）了父类的静态方法，而不是重写。
		（3）被final修饰的变量不能被改变（常量，注意命名规范），被final修饰的方法不能被重写，被final修饰的类不能被继承（类内部的变量以及方法依旧可以被调用），final不能用于修饰构造方法。
适用情况：如果该类不需要子类，类的实现细节不需要改变，并确信该类不会被扩展时则设计为final类；作用：将方法锁定，防止任何继承类修改它的意义和实现；运行高效。
		（4）注意：如果变量/方法被private修饰则只能在本类中可见，子类无法访问该变量/方法，自然无法覆盖该方法，所以被private修饰的方法被隐式指定为final；static/final(private属于final)属于前期绑定（加载类的时候已经确定），其他所有方法都是后期绑定（由对象赋值执行）；



	总结注意事项：1、新实例化一个对象时（类没有被加载过）要经历的步骤：Person p1=new Person();前期准备：进main方法，加载main所在的类；执行到Person p1=new Person();时开始进入真正的实例化对象；中期过程：新建一个Person类的引用Person p1，当程序遇到new时开始加载类。类加载过程如下：加载代码进方法区中的非静态区，为所有的类成员（被static修饰的变量）赋初始值（0/null/false），然后从头开始为所有的类成员（程序自上而下）赋真正的值，接着（如果有的话）执行静态代码块（被static{}包裹的）中的内容，至此整个类就加载完毕。重头戏开始（真正开始实例化对象）：执行到Person()时开始真正实例化对象过程，首先在堆中分配地址，接着为所有的实例成员（没有被static修饰的类中的实例变量，也叫做成员变量）赋初始值，所有的实例成员赋完初始值之后再从第一个实例成员开始赋真正的值，接着（如果有的话）执行构造块中内容，最后执行构造函数。整个实例化对象过程完成。结尾阶段：将实例化后的对象赋给变量p1。
		2、实例化对象简洁版：加载代码――所有类成员赋初始值――所有类成员赋值――执行静态代码块的内容――堆内存分配地址――实例成员赋初始值――实力成员赋值――执行构造函数――实例化完成之后的对象赋给变量p1。
		3、在类加载过程中如果发生了实例化对象的情况（上次老师给的不好理解的那道题，在本类中新创建本类对象，static修饰）则会打断类加载过程，程序会先按照实例化对象（注意类加载和实例化对象步骤是不同的）的步骤实例化对象，然后接着加载类，直至整个类加载完毕。
		4、若类中有继承关系，则实例化对象的步骤如下：为父类中所有属性（类成员）设置默认值；父类静态成员赋值，静态块执行，静态方法声明（只声明，不执行）；调用父类的构造方法：首先父类的非静态成员初始化，构造块，普通方法声明；调用子类的构造方法：子类非静态成员初始化，构造块，普通方法声明，执行子类构造方法。
