<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
	
	<!-- =======================================验证码Jcaptcha配置======================================= -->

	<!-- 构建生成图片服务  180是验证码存在的时间，单位是秒，200000是最大存储大小 -->
	<bean id="imageCaptchaService" class="com.octo.captcha.service.multitype.GenericManageableCaptchaService">
		<constructor-arg index="0" ref="imageEngine" />
		<constructor-arg index="1" value="180" />
		<constructor-arg index="2" value="200000" />
		<constructor-arg index="3" value="75000" />
	</bean>

	<!-- 构建生成图片引擎，可以传入多个ImageCaptchaFactory工厂 -->
	<bean id="imageEngine" class="com.octo.captcha.engine.GenericCaptchaEngine">
		<constructor-arg index="0">
			<list>
				<ref bean="imageCaptchaFactory" />
			</list>
		</constructor-arg>
	</bean>
	<!-- 构件图片工厂 ，图片工厂包括FishEyeFactory和GimpyFactory 它们都继承自ImageCaptchaFactory抽象类 -->
	<bean id="imageCaptchaFactory" class="com.octo.captcha.image.gimpy.GimpyFactory">
		<constructor-arg>
			<ref bean="wordgen" />
		</constructor-arg>
		<constructor-arg>
			<ref bean="wordtoimage" />
		</constructor-arg>
	</bean>

	<!-- 构件验证码上的文本生成类 -->
	<bean id="wordgen" class="com.octo.captcha.component.word.wordgenerator.ComposeDictionaryWordGenerator">
		<constructor-arg index="0" ref="filedict" />
	</bean>

	<!-- 构件文件字典类，读取文件字典 。该文件字典包含在jcaptcha-1.0-all.jar 包的toddlist.properties 文件 -->
	<bean id="filedict" class="com.octo.captcha.component.word.FileDictionary">
		<constructor-arg index="0" value="toddlist" />
	</bean>

	<!-- 构件一个从文本到图片的生成类 -->
	<bean id="wordtoimage" class="com.octo.captcha.component.image.wordtoimage.ComposedWordToImage">
		<constructor-arg index="0">
			<ref bean="fontGenRandom" />
		</constructor-arg>
		<constructor-arg index="1">
			<ref bean="backGenUni" />
		</constructor-arg>
		<constructor-arg index="2">
			<ref bean="simpleColoredPaster" />
		</constructor-arg>
	</bean>
	<!-- 构件一个生成随机字体的类 。第一个参数是最小字体大小，第二个参数是最大字体大小，第三个参数是随机的字体列表  这里定义了5种类型的字体 -->
	<bean id="fontGenRandom" class="com.octo.captcha.component.image.fontgenerator.RandomFontGenerator">
		<constructor-arg index="0">
			<value>16</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>16</value>
		</constructor-arg>
		<constructor-arg index="2">
			<list>
				<bean class="java.awt.Font">
					<constructor-arg index="0" value="Arial" />
					<constructor-arg index="1" value="0" />
					<constructor-arg index="2" value="10" />
				</bean>
				<bean class="java.awt.Font">
					<constructor-arg index="0" value="Tahoma" />
					<constructor-arg index="1" value="1" />
					<constructor-arg index="2" value="10" />
				</bean>
				<bean class="java.awt.Font">
					<constructor-arg index="0" value="Verdana" />
					<constructor-arg index="1" value="0" />
					<constructor-arg index="2" value="10" />
				</bean>

				<bean class="java.awt.Font">
					<constructor-arg index="0" value="Comic sans MS" />
					<constructor-arg index="1" value="0" />
					<constructor-arg index="2" value="10" />
				</bean>

				<bean class="java.awt.Font">
					<constructor-arg index="0" value="Lucida console" />
					<constructor-arg index="1" value="0" />
					<constructor-arg index="2" value="10" />
				</bean>
			</list>
		</constructor-arg>
	</bean>
	
	<!-- 构件一个背景大小生成类 ，第一个参数是背景宽度，第二个参数是背景高度 -->
	<bean id="backGenUni" class="com.octo.captcha.component.image.backgroundgenerator.UniColorBackgroundGenerator">
		<constructor-arg index="0">
			<value>85</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>34</value>
		</constructor-arg>
	</bean>

	<!-- 构件一个随机文本个数和颜色，第一个参数是最少文本个数，第二个参数是最多文本个数 -->
	<bean id="simpleColoredPaster" class="com.octo.captcha.component.image.textpaster.RandomTextPaster">
		<constructor-arg index="0" value="4" />
		<constructor-arg index="1" value="5" />
		<constructor-arg type="com.octo.captcha.component.image.color.ColorGenerator" index="2" ref="colorGenRandomDark" />
		<constructor-arg index="3" value="true" />
	</bean>
	
	<!-- 构件一个随机的颜色，参数分别代表RGBA通道的取值范围 -->
	<bean id="colorGenRandomDark" class="com.octo.captcha.component.image.color.RandomRangeColorGenerator">
		<constructor-arg index="0">
			<list>
				<value>0</value>
				<value>255</value>
			</list>
		</constructor-arg>
		<constructor-arg index="1">
			<list>
				<value>0</value>
				<value>185</value>
			</list>
		</constructor-arg>
		<constructor-arg index="2">
			<list>
				<value>0</value>
				<value>200</value>
			</list>
		</constructor-arg>
		<constructor-arg index="3">
			<list>
				<value>255</value>
				<value>255</value>
			</list>
		</constructor-arg>
	</bean>

</beans>