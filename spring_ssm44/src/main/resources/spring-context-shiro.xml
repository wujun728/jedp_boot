<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<!-- =======================================Shiro权限配置======================================= -->

	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath*:/application.properties" />
	
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="cacheManager" ref="shiroCacheManager" />
		<property name="realm" ref="systemAuthorizingRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>

	<!-- 用户授权信息Cache, 采用EhCache -->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:caches/ehcache-shiro.xml" />
	</bean>

	<!-- Realm实现 -->
	<bean id="systemAuthorizingRealm" class="org.zhanghua.ssm.security.SystemAuthorizingRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher" />
		<!-- 是否启动缓存 默认false -->
		<property name="cachingEnabled" value="true" />
		<!-- 是否启用身份验证缓存，即缓存AuthenticationInfo信息， 默认false -->
		<property name="authenticationCachingEnabled" value="true" />
		<!-- 是否启用缓存AuthenticationInfo信息的缓存名称 -->
		<property name="authenticationCacheName" value="authenticationCache" />
		<!-- 是否启动授权缓存，即缓存AuthorizationInfo信息，默认false -->
		<property name="authorizationCachingEnabled" value="true" />
		<!-- 是否启动缓存AuthorizationInfo信息的缓存名称 -->
		<property name="authorizationCacheName" value="authorizationCache" />
	</bean>

	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="${shiro.hashAlgorithmName}" />
		<property name="hashIterations" value="${shiro.hashIterations}" />
		<property name="storedCredentialsHexEncoded" value="true" />
	</bean>


	<!-- 基于Form表单的身份验证过滤器 -->
	<bean id="captchaFormAuthenticationFilter"
		class="org.zhanghua.ssm.security.CaptchaFormAuthenticationFilter">
		<!--表单上的用户名/密码 下次自动登录的参数名 -->
		<property name="usernameParam" value="username" />
		<property name="passwordParam" value="password" />
		<property name="rememberMeParam" value="rememberMe" />
	</bean>

	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/index" />
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="captchaFormAuthenticationFilter" />
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/login = authc
				/logout = logout
				/js/** = anon
				/css/** = anon
				/images/** = anon
				/** = user
			</value>
		</property>
	</bean>

	<!-- 会话管理配置 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionDAO" ref="sessionDAO" />
		<!-- 会话超时时间，单位：毫秒 -->
		<property name="globalSessionTimeout" value="${session.globalSessionTimeout}" />
		<property name="deleteInvalidSessions" value="true" />

		<!-- <property name="sessionValidationInterval" value="${session.validation.interval}" /> -->
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />

		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>


	<bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
	</bean>
	
	<!-- uid(session id) 生成策略 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
		<property name="sessionValidationInterval" value="${session.validation.interval}"/>
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	
	<!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID, 
		当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="${sessionIdCookie.name}" />
		<property name="domain" value="${sessionIdCookie.domain}" />
		<property name="path" value="${sessionIdCookie.path}" />
		<property name="maxAge" value="${sessionIdCookie.maxAge}" />
		<property name="httpOnly" value="${sessionIdCookie.httpOnly}" />
	</bean>

	
	<!-- rememberMe配置 -->

	<!-- Remembered vs Authenticated http://www.ituring.com.cn/article/287 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('${rememberMeCookie.base64.cipherKey}')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="${rememberMeCookie.name}" />
		<property name="domain" value="${rememberMeCookie.domain}" />
		<property name="path" value="${rememberMeCookie.path}" />
		<property name="maxAge" value="${rememberMeCookie.maxAge}" />
		<property name="httpOnly" value="${rememberMeCookie.httpOnly}" />
	</bean>

	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- 支持Shiro对Controller的方法级AOP安全控制 begin -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>

	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<!-- end -->

</beans>