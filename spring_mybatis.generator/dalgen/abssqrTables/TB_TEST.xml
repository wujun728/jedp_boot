<!DOCTYPE table SYSTEM "../config/table-config-1.0.dtd">
<table sqlname="tb_test" physicalName="tb_test" remark="TB_TEST">
    <!--  特殊字符说明 &lt;&gt; <> -->
    <!-- baseSql option中 select * 会自动替换为 include -->
    <sql id="Base_Column_List">
        ID,AMT,CODE,NAME,DD 
        ,DT
    </sql>

    <!-- baseSql option中 select sf.* 会自动替换为 include -->
    <sql id="Base_SF_Column_List">
        sf.ID,sf.AMT,sf.CODE,sf.NAME,sf.DD 
        ,sf.DT
    </sql>

    <operation name="insert" paramtype="object" remark="插入表:tb_test" autoGen="true">
            <![CDATA[
            INSERT INTO tb_test(
                    ID
                    ,AMT
                    ,CODE
                    ,NAME
                    ,DD
                    ,DT
            )VALUES(
                     null
                    , #{amt,jdbcType=DECIMAL}
                    , #{code,jdbcType=VARCHAR}
                    , #{name,jdbcType=VARCHAR}
                    , #{dd,jdbcType=DATE}
                    , #{dt,jdbcType=DATETIME}
            )
            ]]>
    </operation>

    <!-- foreach 可以自定义类型，paramtype="primitive" foreach->javatype="自己书写的类"  -->
    <!-- 只有一个参数且为List时必须将参数命名为list -->
    <operation name="insertBatch" paramtype="objectList" remark="批量插入表:tb_test"  autoGen="true">
            INSERT INTO tb_test(
                    ID
                    ,AMT
                    ,CODE
                    ,NAME
                    ,DD
                    ,DT
            )VALUES
            <foreach collection="list"  item="item" separator=",">
                (
                     null
                    , #{item.amt,jdbcType=DECIMAL}
                    , #{item.code,jdbcType=VARCHAR}
                    , #{item.name,jdbcType=VARCHAR}
                    , #{item.dd,jdbcType=DATE}
                    , #{item.dt,jdbcType=DATETIME}
                )
            </foreach>
    </operation>

    <!-- 不推荐使用全 update 有需要自己打开
    <operation name="update" paramtype="object" remark="更新表:tb_test"  autoGen="true">
        <![CDATA[
        UPDATE tb_test
        SET
            AMT             = #{amt,jdbcType=DECIMAL}
            ,CODE            = #{code,jdbcType=VARCHAR}
            ,NAME            = #{name,jdbcType=VARCHAR}
            ,DD              = #{dd,jdbcType=DATE}
            ,DT              = #{dt,jdbcType=DATETIME}
        WHERE
            ID              = #{id,jdbcType=INT}
        ]]>
    </operation>
    -->
    <operation name="deleteById"  remark="根据主键删除数据:tb_test">
        <![CDATA[
        DELETE FROM tb_test
        WHERE
            ID = #{id,jdbcType=INT}
        ]]>
    </operation>

    <operation name="getById" multiplicity="one" remark="根据主键获取数据:tb_test">
        SELECT *
        FROM tb_test
        WHERE
        <![CDATA[
            ID = #{id,jdbcType=INT}
        ]]>
    </operation>

    <!-- 根据唯一约束操作数据 -->
    <operation name="updateByCode" paramtype="object" remark="根据唯一约束Code更新表:tb_test">
        <![CDATA[
        UPDATE tb_test
        SET
            AMT             = #{amt,jdbcType=DECIMAL}
            ,NAME            = #{name,jdbcType=VARCHAR}
            ,DD              = #{dd,jdbcType=DATE}
            ,DT              = #{dt,jdbcType=DATETIME}
        WHERE
            CODE            = #{code,jdbcType=VARCHAR}
        ]]>
    </operation>

    <operation name="deleteByCode" remark="根据唯一约束Code删除数据:tb_test">
        <![CDATA[
        DELETE FROM tb_test
        WHERE
            CODE            = #{code,jdbcType=VARCHAR}
        ]]>
    </operation>

    <operation name="getByCode" multiplicity="one" remark="根据唯一约束Code获取数据:tb_test">
        SELECT *
        FROM tb_test
        WHERE
        <![CDATA[
            CODE            = #{code,jdbcType=VARCHAR}
        ]]>
    </operation>

</table>
